swagger: "2.0"
info:
  version: "0.0.1"
  title: Games Collector API
# during dev, should point to your local machine
host: maailmankaikkeus-192918.appspot.com
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
tags:
  - name: GameSystem
    description: Operations with game system objects
  - name: Videogame
    description: Operations with videogame objects
paths:
  # GENERAL ROUTES
  /swagger:
    x-swagger-pipe: swagger_raw
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  # GAMESYSTEM ROUTES
  /gamesystems:
    x-swagger-router-controller: gamesystem.controller
    get:
      tags:
        - GameSystem
      description: Get list of game systems
      operationId: getGameSystems
      parameters:
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/RequestedFieldsParameter"
        - $ref: "#/parameters/NameQuery"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetGameSystemListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - GameSystem
      description: Add a new game system
      operationId: createGameSystem
      parameters:
        - $ref: "#/parameters/FullGameSystemPayload"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/FullGameSystem"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /gamesystems/{id}:
    x-swagger-router-controller: gamesystem.controller
    get:
      tags:
        - GameSystem
      description: Get a game system
      operationId: getGameSystemById
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetGameSystemResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - GameSystem
      description: Update game system
      operationId: updateGameSystem
      parameters:
        - name: id
          description: Game system id
          type: number
          in: path
          required: true
        - in: body
          name: gamesystem
          description: The new game system
          schema:
            $ref: "#/definitions/GameSystem"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetGameSystemResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - GameSystem
      description: Delete game system
      operationId: deleteGameSystem
      parameters:
        - name: id
          description: Game system id
          type: number
          in: path
          required: true
      responses:
        "200":
          $ref: "#/responses/GeneralSuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  # VIDEOGAME ROUTES
  /videogames:
    x-swagger-router-controller: videogame.controller
    get:
      tags:
        - Videogame
      description: Get all videogames
      operationId: getVideogames
      parameters:
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/RequestedFieldsParameter"
        - $ref: "#/parameters/NameQuery"
        - $ref: "#/parameters/DeveloperQuery"
        - $ref: "#/parameters/GameSystemQuery"
        - $ref: "#/parameters/GenreQuery"
        - $ref: "#/parameters/YearQuery"
      responses:
        "200":
          $ref: "#/responses/StoredVideogamesArrayResponse"
        default:
          $ref: "#/responses/GeneralErrorResponse"
    post:
      tags:
        - Videogame
      description: Create new videogame
      operationId: createVideogame
      parameters:
        - $ref: "#/parameters/FullVideogamePayload"
      responses:
        "201":
          $ref: "#/responses/StoredVideogameResponse"
        default:
          $ref: "#/responses/GeneralErrorResponse"
  /videogames/{id}:
    x-swagger-router-controller: videogame.controller
    get:
      tags:
        - Videogame
      description: Get videogame by ID
      operationId: getVideogameById
      parameters:
        - $ref: "#/parameters/RequiredIdParameter"
      responses:
        "200":
          $ref: "#/responses/StoredVideogameResponse"
        default:
          $ref: "#/responses/GeneralErrorResponse"
    put:
      tags:
        - Videogame
      description: Replace videogame with given ID
      operationId: updateVideogame
      parameters:
        - $ref: "#/parameters/RequiredIdParameter"
        - $ref: "#/parameters/VideogamePayload"
      responses:
        "200":
          $ref: "#/responses/StoredVideogameResponse"
        default:
          $ref: "#/responses/GeneralErrorResponse"
    delete:
      tags:
        - Videogame
      description: Delete videogame
      operationId: deleteVideogame
      parameters:
        - $ref: "#/parameters/RequiredIdParameter"
      responses:
        "200":
          $ref: "#/responses/GeneralSuccessResponse"
        default:
          $ref: "#/responses/GeneralErrorResponse"
# DEFINITIONS
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  GameSystem:
    type: object
    properties:
      name:
        type: string
        description: Name of the game system
      description:
        type: string
        description: Description of the game system
      image:
        type: string
        format: byte
        description: Game system image URL
  FullGameSystem:
    allOf:
      - $ref: "#/definitions/GameSystem"
    required:
      - name
      - description
      - image
  GetGameSystemResponse:
    type: object
    properties:
      id:
        type: number
        description: Game system identifier
      name:
        type: string
        description: Name of the game system
      description:
        type: string
        description: Description of the game system
      image:
        type: string
        format: byte
    required:
      - name
      - description
  GetGameSystemListResponse:
    required:
      - gamesystems
    properties:
      gamesystems:
        type: array
        items:
          $ref: "#/definitions/GetGameSystemResponse"
  Error:
    required:
      - message
    properties:
      code:
        type: number
      message:
        type: string
      description:
        type: string
  Success:
    required:
      - message
    properties:
      message:
        type: string
  # VIDEOGAME DEFINITIONS
  Videogame:
    type: object
    description: Distributable videogame
    properties:
      name:
        type: string
        description: Name of the videogame
      developer:
        type: string
        description: Game developer
      gamesystem:
        type: string
        description: Target game system
      genre:
        type: string
        description: Game genre
      year:
        type: number
        description: Release year
      image:
        type: string
        format: byte
        description: Videogame image URL
  FullVideogame:
    allOf:
      - $ref: "#/definitions/Videogame"
    required:
      - name
      - developer
      - gamesystem
      - year
      - genre
  StoredVideogame:
    type: object
    properties:
      id:
        type: number
        description: Videogame identifier
      videogame:
        $ref: "#/definitions/FullVideogame"
  StoredVideogamesArray:
    required:
      - videogames
    properties:
      videogames:
        type: array
        items:
          $ref: "#/definitions/StoredVideogame"
# PARAMETERS
parameters:
  RequiredIdParameter:
    description: ID of requested object
    in: path
    name: id
    required: true
    type: number
  SortParameter:
    description: Sorting criteria
    in: query
    name: sort
    required: false
    type: string
  RequestedFieldsParameter:
    description: Requested object fields
    in: query
    name: fields
    required: false
    type: string
  NameQuery:
    description: Object name to query in collection
    in: query
    name: name
    required: false
    type: string
  DeveloperQuery:
    description: Game developer to query in collection
    in: query
    name: developer
    required: false
    type: string
  GameSystemQuery:
    description: Game system to query in collection
    in: query
    name: gamesystem
    required: false
    type: string
  GenreQuery:
    description: Game genre to query in collection
    in: query
    name: genre
    required: false
    type: string
  YearQuery:
    description: Release year to query in collection
    in: query
    name: year
    required: false
    type: number
  FullGameSystemPayload:
    description: Game system object with all properties
    in: body
    name: gamesystem
    required: true
    schema:
      $ref: "#/definitions/FullGameSystem"
  VideogamePayload:
    description: Videogame object
    in: body
    name: videogame
    required: true
    schema:
      $ref: "#/definitions/Videogame"
  FullVideogamePayload:
    description: Videogame object with all properties
    in: body
    name: gamesystem
    required: true
    schema:
      $ref: "#/definitions/FullVideogame"
responses:
  StoredVideogameResponse:
    description: Created
    schema:
      $ref: "#/definitions/StoredVideogame"
  StoredVideogamesArrayResponse:
    description: Sucess
    schema:
        $ref: "#/definitions/StoredVideogamesArray"
  GeneralSuccessResponse:
    description: Success
    schema:
      $ref: "#/definitions/Success"
  GeneralErrorResponse:
    description: Error
    schema:
      $ref: "#/definitions/Error"
